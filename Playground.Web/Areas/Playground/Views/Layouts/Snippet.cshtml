@using Score.Data.Const
@using Score.Data.ViewModels.Snippets
@model Score.Data.ViewModels.Base.ContentPage
@{
    var name = SnippetContainerModel.SnippetOrMacro(Model.PageItem);
}
<!DOCTYPE html>
<html lang="@Sitecore.Context.Language.ToString()">
<head>
    <meta charset="utf-8" />

    @Html.Sitecore().Rendering(ScoreConst.RenderingIds.PageMetaData, new { Cacheable = true, Cache_VaryByData = true })
    @Html.Sitecore().Rendering(ScoreConst.RenderingIds.PageHeaderScripts, new { Cacheable = true, Cache_VaryByData = true })
    @Html.Sitecore().Rendering(ScoreConst.RenderingIds.SiteHeaderScripts, new { Cacheable = true })

    <link href="@Url.Content("~/Areas/Playground/css/main.css")" rel="stylesheet"/>

    @if (Sitecore.Context.PageMode.IsPageEditorEditing)
    {
        <link href="@Url.Content("~/Areas/ScoreBootstrapUI/css/bootstrapui_page_editor.css")" rel="stylesheet" />
        <link href="@Url.Content("~/Areas/Playground/css/page_editor.css")" rel="stylesheet" />
    }

    <script src="@Url.Content("~/Areas/Playground/js/vendor/modernizr.2.6.2.min.js")"></script>
</head>
<body>
    <div class="container">
        <div class="row">
            <img src="@Url.Content("~/Areas/ScoreBootstrapUI/images/icons/score128snippet.jpg")" style="float:left" />
            <h1>Content @name</h1>
            <br style="clear:left;" />
        </div>
    </div>
    <div class="@ScoreStyles.PageWrapper snippet-content">
        @Html.Sitecore().Placeholder("SnippetContainer")
    </div>

    <!-- Placed at the end of the document so the pages load faster -->
    <!-- Placed at the end of the document so the pages load faster -->
    @foreach (var area in new[] { "ScoreCCF", "ScoreBootstrapUI", "Playground" })
    {
        <script src="@Url.Content("~/Areas/" + area + "/js/require.config.js")" type="text/javascript"></script>
    }
    <script src="@Url.Content("~/Areas/ScoreCCF/js/Vendor/require.js")" data-main="/Areas/Playground/js/main.js" type="text/javascript"></script>

    @Html.Sitecore().Rendering(ScoreConst.RenderingIds.PageFooterScripts, new { Cacheable = true, Cache_VaryByData = true })
    @Html.Sitecore().Rendering(ScoreConst.RenderingIds.SiteFooterScripts, new { Cacheable = true })

</body>
</html>
